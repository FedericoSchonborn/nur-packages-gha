name: Build and Populate Cache
run-name: Build and Populate Cache (${{ inputs.branch || 'main' }})

on:
  push:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:
    inputs:
      branch:
        description: Branch
        required: true
        type: string
        default: main

jobs:
  build:
    name: ${{ matrix.channel }}/${{ matrix.system }}
    strategy:
      fail-fast: false
      matrix:
        system:
          - x86_64-linux
          - aarch64-linux
        channel:
          - nixpkgs-unstable
          - nixos-unstable
          - nixos-25.05
        include:
          - system: x86_64-darwin
            channel: nixpkgs-unstable
          - system: x86_64-darwin
            channel: nixpkgs-25.05-darwin
          - system: aarch64-darwin
            channel: nixpkgs-unstable
          - system: aarch64-darwin
            channel: nixpkgs-25.05-darwin
    runs-on: >-
      ${{ (matrix.system == 'x86_64-linux'   && 'ubuntu-24.04')
       || (matrix.system == 'aarch64-linux'  && 'ubuntu-24.04-arm')
       || (matrix.system == 'x86_64-darwin'  && 'macos-13')
       || (matrix.system == 'aarch64-darwin' && 'macos-15') }}

    steps:
      - name: Checkout
        run: |
          git clone --depth 1 --branch ${{ inputs.branch || 'main' }} https://codeberg.org/FedericoSchonborn/nur-packages.git $GITHUB_WORKSPACE

      - name: Install Nix
        run: |
          curl --proto '=https' --tlsv1.2 -sSf -L https://install.lix.systems/lix | sh -s -- install --no-confirm --extra-conf "trusted-users = root runner"

      - name: Set up Cachix
        uses: cachix/cachix-action@v16
        with:
          name: ${{ vars.CACHIX_CACHE }}
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Show Nixpkgs version
        run: |
          nix-instantiate --eval -E '(import <nixpkgs> {}).lib.version'

      - name: Check evaluation
        run: |
          nix-env -f . -qa \* --meta --xml \
            --allowed-uris https://static.rust-lang.org \
            --option restrict-eval true \
            --option allow-import-from-derivation true \
            --drv-path --show-trace \
            -I "nixpkgs=$(nix-instantiate --find-file nixpkgs)" \
            -I "$PWD"

      - name: Build Nix packages
        run: nix shell -f '<nixpkgs>' nix-build-uncached -c nix-build-uncached ci.nix -A cacheOutputs -build-flags "--show-trace --print-build-logs --keep-going --keep-failed"
